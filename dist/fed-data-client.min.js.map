{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/bootstrap/dist/js/npm.js","fed-data-client.min.js","node_modules/bootstrap/js/affix.js","node_modules/bootstrap/js/alert.js","node_modules/bootstrap/js/button.js","node_modules/bootstrap/js/carousel.js","node_modules/bootstrap/js/collapse.js","node_modules/bootstrap/js/dropdown.js","node_modules/bootstrap/js/modal.js","node_modules/bootstrap/js/popover.js","node_modules/bootstrap/js/scrollspy.js","node_modules/bootstrap/js/tab.js","node_modules/bootstrap/js/tooltip.js","node_modules/bootstrap/js/transition.js","src/entry.js","src/index.js","src/ldf-client-jquery-url.js","src/ldf-client-widget.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","fedDataClient","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","../../js/affix.js","../../js/alert.js","../../js/button.js","../../js/carousel.js","../../js/collapse.js","../../js/dropdown.js","../../js/modal.js","../../js/popover.js","../../js/scrollspy.js","../../js/tab.js","../../js/tooltip.js","../../js/transition.js","2","$","Plugin","option","each","$this","data","options","Affix","element","extend","DEFAULTS","$target","target","on","proxy","checkPosition","checkPositionWithEventLoop","$element","affixed","unpin","pinnedOffset","VERSION","RESET","offset","prototype","getState","scrollHeight","height","offsetTop","offsetBottom","scrollTop","position","targetHeight","top","initializing","colliderTop","colliderHeight","getPinnedOffset","removeClass","addClass","setTimeout","is","bottom","Math","max","document","body","affix","css","affixType","Event","trigger","isDefaultPrevented","replace","old","fn","Constructor","noConflict","$spy","jQuery","3","Alert","dismiss","el","close","TRANSITION_DURATION","removeElement","$parent","detach","remove","selector","attr","preventDefault","closest","support","transition","hasClass","one","emulateTransitionEnd","alert","4","Button","toggle","setState","isLoading","loadingText","state","d","$el","val","resetText","removeAttr","changed","$input","find","prop","toggleClass","button","$btn","test","type","5","Carousel","action","slide","to","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keyboard","keydown","documentElement","wrap","tagName","which","prev","next","clearInterval","setInterval","getItemIndex","item","parent","children","index","getItemForDirection","direction","active","activeIndex","willWrap","delta","itemIndex","eq","pos","that","end","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","offsetWidth","join","carousel","clickHandler","href","slideIndex","$carousel","6","getTargetFromTrigger","$trigger","Collapse","id","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","show","activesData","actives","startEvent","complete","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","7","clearMenus","backdrop","contains","Dropdown","isActive","createElement","insertAfter","stopPropagation","desc","dropdown","8","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","resize","appendTo","adjustDialog","enforceFocus","off","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","callback","animate","doAnimate","currentTarget","focus","callbackRemove","modalIsOverflowing","clientHeight","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","abs","left","clientWidth","measureScrollbar","bodyPad","parseInt","style","scrollDiv","className","append","removeChild","modal","showEvent","9","Popover","init","tooltip","placement","content","template","constructor","getDefaults","setContent","$tip","tip","title","getTitle","getContent","html","hasContent","$e","arrow","$arrow","popover","10","ScrollSpy","$scrollElement","offsets","targets","activeTarget","process","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","map","$href","sort","b","push","maxScroll","activate","clear","undefined","parents","parentsUntil","scrollspy","11","Tab","$ul","$previous","hideEvent","container","tab","12","Tooltip","enabled","timeout","hoverState","inState","animation","delay","viewport","padding","getOptions","$viewport","isFunction","click","hover","triggers","split","eventIn","eventOut","enter","leave","_options","fixTitle","getDelegateOptions","defaults","key","value","obj","clearTimeout","isInStateTrue","inDom","ownerDocument","tipId","getUID","autoToken","autoPlace","display","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","width","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","isNaN","setOffset","using","props","round","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","isBody","elRect","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","prefix","random","getElementById","enable","disable","toggleEnabled","destroy","removeData","13","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","name","duration","called","event","special","bsTransitionEnd","bindType","delegateType","handle","handleObj","handler","apply","arguments","14","./index.js","15","./ldf-client-jquery-url.js","./ldf-client-widget.js","bootstrap","16","loadStateFromUrl","uiState","location","hash","substr","reduce","keyvalue","match","decodeURIComponent","datasources","startFragment","$queryui","queryui","query","saveStateToUrl","url","selectedDatasources","defaultDatasource","hasDefaultQuery","queries","sparql","hasDefaultDatasource","encodeURIComponent","history","replaceState","17","LdfQueryUI","appendText","lt","gt","amp","text","outerHTML","toHash","array","operation","result","_create","_setOption","prefixes","$log","$stop","$start","$query","$queries","$datasources","$results","chosen","create_option","persistent_create_option","skip_no_results","search_contains","display_selected_options","placeholder_text","create_option_text","change","edited","_execute","bind","_stopExecution","logger","_logger","ldf","Logger","setLevel","_print","items","slice","trim","initialize","empty","datasource","$options","selected","$option","exists","_loadQueries","some","v","getJSON","settings","filter","querySetId","q","_querySetId","config","fragmentsClient","FragmentsClient","resultsIterator","SparqlIterator","error","_resultsIterator","queryType","resultCount","row","lines","k","writer","N3","Writer","write","chunk","encoding","done","triple","addTriple","removeAllListeners","HttpClient","abortAll","message"],"mappings":"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","file":"fed-data-client.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.\nrequire('../../js/transition.js')\nrequire('../../js/alert.js')\nrequire('../../js/button.js')\nrequire('../../js/carousel.js')\nrequire('../../js/collapse.js')\nrequire('../../js/dropdown.js')\nrequire('../../js/modal.js')\nrequire('../../js/tooltip.js')\nrequire('../../js/popover.js')\nrequire('../../js/scrollspy.js')\nrequire('../../js/tab.js')\nrequire('../../js/affix.js')","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.fedDataClient = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.\nrequire('../../js/transition.js')\nrequire('../../js/alert.js')\nrequire('../../js/button.js')\nrequire('../../js/carousel.js')\nrequire('../../js/collapse.js')\nrequire('../../js/dropdown.js')\nrequire('../../js/modal.js')\nrequire('../../js/tooltip.js')\nrequire('../../js/popover.js')\nrequire('../../js/scrollspy.js')\nrequire('../../js/tab.js')\nrequire('../../js/affix.js')\n},{\"../../js/affix.js\":2,\"../../js/alert.js\":3,\"../../js/button.js\":4,\"../../js/carousel.js\":5,\"../../js/collapse.js\":6,\"../../js/dropdown.js\":7,\"../../js/modal.js\":8,\"../../js/popover.js\":9,\"../../js/scrollspy.js\":10,\"../../js/tab.js\":11,\"../../js/tooltip.js\":12,\"../../js/transition.js\":13}],2:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: affix.js v3.3.6\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.6'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n\n},{}],3:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: alert.js v3.3.6\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.6'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n},{}],4:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: button.js v3.3.6\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.6'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n},{}],5:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.6\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.6'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n},{}],6:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.6\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.6'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n},{}],7:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.6\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.6'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n},{}],8:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: modal.js v3.3.6\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.6'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n},{}],9:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: popover.js v3.3.6\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.6'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n},{}],10:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.6\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.6'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n},{}],11:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: tab.js v3.3.6\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.6'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n},{}],12:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.6\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.6'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n},{}],13:[function(require,module,exports){\n/* ========================================================================\n * Bootstrap: transition.js v3.3.6\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n},{}],14:[function(require,module,exports){\nmodule.exports = require('./index.js');\n\n},{\"./index.js\":15}],15:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar $ =  (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nrequire('./ldf-client-jquery-url.js');\nrequire('./ldf-client-widget.js');\nrequire('bootstrap');\nmodule.exports.$ = $;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./ldf-client-jquery-url.js\":16,\"./ldf-client-widget.js\":17,\"bootstrap\":1}],16:[function(require,module,exports){\n/*! @license ©2014 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */\n/** Loads and stores state of the Triple Pattern Fragments widget using the URL. */\n\njQuery(function ($) {\n  var $queryui = $('.ldf-client').one('changeQuerySet', function () {\n    // Restore the UI state upon entering and when the URL changes\n    loadStateFromUrl();\n    $(window).on('popstate', loadStateFromUrl);\n    // Store the UI state in the URL when the UI changes\n    $queryui.on('change', saveStateToUrl);\n  });\n\n  // Loads the UI state from the URL\n  function loadStateFromUrl() {\n    var uiState = location.hash.substr(1).split('&').reduce(function (uiState, item) {\n      var keyvalue = item.match(/^([^=]+)=(.*)/);\n      if (keyvalue) uiState[decodeURIComponent(keyvalue[1])] = decodeURIComponent(keyvalue[2]);\n      return uiState;\n    }, {});\n    if (uiState.datasources = uiState.datasources || uiState.startFragment) // backwards compatibility\n      $queryui.queryui('option', 'selectedDatasources', uiState.datasources.split(/[ ,;]+/));\n    if (uiState.query)\n      $queryui.queryui('option', 'query', uiState.query);\n  }\n\n  // Stores the current UI state in the URL\n  function saveStateToUrl() {\n    var url = location.href.replace(/#.*/, ''),\n        options = $queryui.queryui('option'),\n        datasources = options.selectedDatasources || [],\n        defaultDatasource = (options.datasources[0] || {}).url,\n        hasDefaultQuery = options.query === (options.queries[0] || {}).sparql,\n        hasDefaultDatasource = datasources.length === 0 ||\n                               (datasources.length === 1 && datasources[0] === defaultDatasource);\n    if (!hasDefaultDatasource || !hasDefaultQuery)\n      url += '#datasources=' + datasources.map(encodeURIComponent).join(';') +\n             (hasDefaultQuery ? '' : '&query=' + encodeURIComponent(options.query || ''));\n    history.replaceState && history.replaceState(null, null, url);\n  }\n});\n\n},{}],17:[function(require,module,exports){\n/*! @license ©2015 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */\n// jQuery widget for Triple Pattern Fragments query execution\n\n(function ($) {\n  // Query UI main entry point, which mimics the jQuery UI widget interface:\n  // - $(element).queryui(options) initializes the widget\n  // - $(element).queryui('option', [key], [value]) gets or sets one or all options\n  $.fn.queryui = function (operation, option, value) {\n    // Shift parameters if no operation given\n    if (typeof operation !== 'string')\n      value = option, option = operation, operation = 'init';\n\n    // Apply the operation to all elements; if one element yields a value, stop and return it\n    var result = this;\n    for (var i = 0; i < this.length && result === this; i++) {\n      var $element = $(this[i]), queryui = $element.data('queryui');\n      switch (operation) {\n        // initialize the element as a Query UI\n        case 'init':\n          if (!queryui) {\n            $element.data('queryui', queryui = new LdfQueryUI($element, option));\n            queryui._create();\n          }\n          break;\n        // set an option of a Query UI\n        case 'option':\n          if (!queryui) throw new Error('Query UI not activated on this element');\n          // retrieve all options\n          if (option === undefined)     result = queryui.options;\n          // retrieve a specific option\n          else if (value === undefined) result = queryui.options[value];\n          // set a specific option\n          else queryui._setOption(option, value);\n          break;\n      }\n    }\n    return result;\n  };\n\n  // Creates a new Query UI interface for the given element\n  function LdfQueryUI($element, options) {\n    this.element = $element;\n    this.options = $.extend({}, this.options, options);\n  }\n\n  $.extend(LdfQueryUI.prototype, {\n    // Default widget options\n    options: {\n      datasources: [],\n      queries: [],\n      prefixes: [],\n    },\n\n    // Initializes the widget\n    _create: function () {\n      var self = this,\n          options = this.options,\n          $element = this.element,\n          $log = this.$log = $('.log', $element),\n          $stop = this.$stop = $('.stop', $element),\n          $start = this.$start = $('.start', $element),\n          $query = this.$query = $('.queryText', $element),\n          $queries = this.$queries = $('.query', $element),\n          $results = this.$results = $('.results', $element),\n          $datasources = this.$datasources = $('.datasources', $element);\n\n      // Replace non-existing elements by an empty text box\n      if (!$datasources.length) $datasources = this.$datasources = $('<select>');\n\n      // When a datasource is selected, load the corresponding query set\n      $datasources.chosen({\n        create_option: true, persistent_create_option: true,\n        skip_no_results: true, search_contains: true, display_selected_options: false,\n        placeholder_text: ' ', create_option_text: 'Add datasource',\n      });\n      $datasources.change(function () { self._setOption('selectedDatasources', $datasources.val()); });\n\n      // When a query is selected, load it into the editor\n      $query.edited = $query.val() !== '';\n      $query.change(function () { options.query = $query.val(); $query.edited = true; });\n      $queries.chosen({ skip_no_results: true, placeholder_text: ' ' });\n      $queries.change(function (query) {\n        if (query = $queries.val())\n          $query.val(options.query = query).edited = false;\n      });\n\n      // Set up starting and stopping\n      $start.click(this._execute.bind(this));\n      $stop.click(this._stopExecution.bind(this));\n\n      // Add log lines to the log element\n      var logger = this._logger = new ldf.Logger();\n      ldf.Logger.setLevel('info');\n      logger._print = function (items) { appendText($log, items.slice(2).join(' ').trim() + '\\n'); };\n\n      // Apply all options\n      for (var key in options)\n        this._setOption(key, options[key], true);\n    },\n\n    // Sets a specific widget option\n    _setOption: function (key, value, initialize) {\n      var options = this.options;\n      if (!initialize && options[key] === value) return;\n      options[key] = value;\n\n      // Apply the chosen option\n      var self = this, $datasources = this.$datasources, $queries = this.$queries;\n      switch (key) {\n      // Set the datasources available for querying\n      case 'datasources':\n        // Create options for each datasource\n        $datasources.empty().append((value || []).map(function (datasource, index) {\n          return $('<option>', { text: datasource.name, value: datasource.url });\n        }));\n        // Restore selected datasources\n        this._setOption('selectedDatasources', options.selectedDatasources, true);\n        break;\n      // Set the datasources to query\n      case 'selectedDatasources':\n        // Choose the first available datasource if none was chosen\n        var $options = $datasources.children();\n        if (initialize && !(value && value.length) && $options.length)\n          options[key] = value = [$options.val()];\n        // Select chosen datasources that were already in the list\n        var selected = toHash(value);\n        $options.each(function (index) {\n          var $option = $(this), url = $(this).val();\n          $option.attr('selected', url in selected);\n          selected[url] = true;\n        });\n        // Add and select chosen datasources that were not in the list yet\n        $datasources.append($.map(selected, function (exists, url) {\n          return exists ? null : $('<option>', { text: url, value: url, selected: true });\n        })).trigger('chosen:updated');\n        // Update the query set\n        this._loadQueries(value);\n        break;\n      // Set the query\n      case 'query':\n        this.$query.val(value).change();\n        break;\n      // Set the list of all possible queries\n      case 'queries':\n        this._loadQueries(options.selectedDatasources);\n        break;\n      // Set the list of selectable queries\n      case 'relevantQueries':\n        value = value || [];\n        // Load the first selectable query if the current query was not edited and not in the list\n        if (!this.$query.edited && !value.some(function (v) { return v.sparql === options.query; }))\n          value[0] && this._setOption('query', value[0].sparql);\n        // Update the selectable query list\n        $queries.empty().append($('<option>'), value.map(function (query) {\n          return $('<option>', { text: query.name, value: query.sparql,\n                                 selected: options.query === query.sparql });\n        })).trigger('chosen:updated').change();\n        break;\n      // Load settings from a JSON resource\n      case 'settings':\n        $.getJSON(value, function (settings) {\n          for (var key in settings)\n            self._setOption(key, settings[key]);\n        });\n        break;\n      }\n    },\n\n    // Load queries relevant for the given datasources\n    _loadQueries: function (datasources) {\n      datasources = toHash(datasources);\n      var queries = (this.options.queries || []).filter(function (query, index) {\n        query.id = index;\n        // Include the query if it indicates no datasources,\n        // or if it is relevant for at least one datasource\n        return !query.datasources || !query.datasources.length ||\n               query.datasources.some(function (d) { return d in datasources; });\n      });\n\n      // Load the set of queries if it is different from the current set\n      var querySetId = queries.map(function (q) { return q.id; }).join();\n      if (this._querySetId !== querySetId) {\n        this._querySetId = querySetId;\n        this._setOption('relevantQueries', queries);\n        this.element.trigger('changeQuerySet');\n      }\n    },\n\n    // Starts query execution\n    _execute: function () {\n     var datasources = this.$datasources.val();\n      if (!datasources || !datasources.length)\n        return alert('Please choose a datasource to execute the query.');\n\n      // Clear results and log, and scroll page to the results\n      var $results = this.$results, $log = this.$log;\n      $('html,body').animate({ scrollTop: this.$start.offset().top });\n      this.$stop.show();\n      this.$start.hide();\n      $log.empty();\n      $results.empty();\n\n      // Create a client to fetch the fragments through HTTP\n      var config = { prefixes: this.options.prefixes, logger: this._logger };\n      config.fragmentsClient = new ldf.FragmentsClient(datasources, config);\n\n      // Create the iterator to solve the query\n      var resultsIterator;\n      try { resultsIterator = new ldf.SparqlIterator(this.$query.val(), config); }\n      catch (error) { return this._stopExecution(error); }\n      this._resultsIterator = resultsIterator;\n      resultsIterator.on('end', $.proxy(this._stopExecution, this));\n      resultsIterator.on('error', $.proxy(this._stopExecution, this));\n\n      // Read the iterator's results, and write them depending on the query type\n      switch (resultsIterator.queryType) {\n        // For SELECT queries, write a JSON array representation of the rows\n        case 'SELECT':\n          var resultCount = 0;\n          resultsIterator.on('data', function (row) {\n            resultCount++;\n            var lines = [];\n            $.each(row, function (k, v) { if (v !== undefined) lines.push(k + ': ' + v); });\n            appendText($results, lines.join('\\n'), '\\n\\n');\n          });\n          resultsIterator.on('end', function () {\n            resultCount || appendText($results, '(This query has no results.)');\n          });\n          break;\n        // For CONSTRUCT and DESCRIBE queries, write a Turtle representation of all results\n        case 'CONSTRUCT':\n        case 'DESCRIBE':\n          var writer = new N3.Writer({ write: function (chunk, encoding, done) {\n            appendText($results, chunk), done && done();\n          }}, config);\n          resultsIterator.on('data', function (triple) { writer.addTriple(triple); })\n                         .on('end',  function () { writer.end(); });\n          break;\n        // For ASK queries, write whether an answer exists\n        case 'ASK':\n          resultsIterator.on('data', function (exists) { appendText($results, exists); });\n          break;\n        default:\n          appendText($log, 'Unsupported query type: ' + resultsIterator.queryType);\n      }\n    },\n\n    // Stops query execution\n    _stopExecution: function (error) {\n      this.$stop.hide();\n      this.$start.show();\n      this._resultsIterator && this._resultsIterator.removeAllListeners();\n      ldf.HttpClient.abortAll && ldf.HttpClient.abortAll();\n      error && error.message && this.$results.text(error.message);\n    },\n  });\n\n  // Appends text to the given element\n  function appendText($element) {\n    for (var i = 1, l = arguments.length; i < l; i++)\n      $element.append((arguments[i] + '').replace(/(<)|(>)|(&)|(https?:\\/\\/[^\\s<>]+)/g, escape));\n    $element.scrollTop(1E10);\n  }\n\n  // Escapes special HTML characters and convert URLs into links\n  function escape(match, lt, gt, amp, url) {\n    return lt && '&lt;' || gt && '&gt;' || amp && '&amp;' ||\n           $('<a>', { href: url, target: '_blank', text: url })[0].outerHTML;\n  }\n\n  // Converts the array to a hash with the elements as keys\n  function toHash(array) {\n    var hash = {}, length = array ? array.length : 0;\n    for (var i = 0; i < length; i++)\n      hash[array[i]] = false;\n    return hash;\n  }\n})(jQuery);\n\n},{}]},{},[14])(14)\n});\n\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.6\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.6'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.6\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.6'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.6\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.6'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.6\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.6'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.6\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.6'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.6\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.6'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.6\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.6'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.6\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.6'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.6\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.6'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.6\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.6'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.6\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.6'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.6\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","module.exports = require('./index.js');\n","\"use strict\";\n\nvar $ =  (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nrequire('./ldf-client-jquery-url.js');\nrequire('./ldf-client-widget.js');\nrequire('bootstrap');\nmodule.exports.$ = $;","/*! @license ©2014 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */\n/** Loads and stores state of the Triple Pattern Fragments widget using the URL. */\n\njQuery(function ($) {\n  var $queryui = $('.ldf-client').one('changeQuerySet', function () {\n    // Restore the UI state upon entering and when the URL changes\n    loadStateFromUrl();\n    $(window).on('popstate', loadStateFromUrl);\n    // Store the UI state in the URL when the UI changes\n    $queryui.on('change', saveStateToUrl);\n  });\n\n  // Loads the UI state from the URL\n  function loadStateFromUrl() {\n    var uiState = location.hash.substr(1).split('&').reduce(function (uiState, item) {\n      var keyvalue = item.match(/^([^=]+)=(.*)/);\n      if (keyvalue) uiState[decodeURIComponent(keyvalue[1])] = decodeURIComponent(keyvalue[2]);\n      return uiState;\n    }, {});\n    if (uiState.datasources = uiState.datasources || uiState.startFragment) // backwards compatibility\n      $queryui.queryui('option', 'selectedDatasources', uiState.datasources.split(/[ ,;]+/));\n    if (uiState.query)\n      $queryui.queryui('option', 'query', uiState.query);\n  }\n\n  // Stores the current UI state in the URL\n  function saveStateToUrl() {\n    var url = location.href.replace(/#.*/, ''),\n        options = $queryui.queryui('option'),\n        datasources = options.selectedDatasources || [],\n        defaultDatasource = (options.datasources[0] || {}).url,\n        hasDefaultQuery = options.query === (options.queries[0] || {}).sparql,\n        hasDefaultDatasource = datasources.length === 0 ||\n                               (datasources.length === 1 && datasources[0] === defaultDatasource);\n    if (!hasDefaultDatasource || !hasDefaultQuery)\n      url += '#datasources=' + datasources.map(encodeURIComponent).join(';') +\n             (hasDefaultQuery ? '' : '&query=' + encodeURIComponent(options.query || ''));\n    history.replaceState && history.replaceState(null, null, url);\n  }\n});\n","/*! @license ©2015 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */\n// jQuery widget for Triple Pattern Fragments query execution\n\n(function ($) {\n  // Query UI main entry point, which mimics the jQuery UI widget interface:\n  // - $(element).queryui(options) initializes the widget\n  // - $(element).queryui('option', [key], [value]) gets or sets one or all options\n  $.fn.queryui = function (operation, option, value) {\n    // Shift parameters if no operation given\n    if (typeof operation !== 'string')\n      value = option, option = operation, operation = 'init';\n\n    // Apply the operation to all elements; if one element yields a value, stop and return it\n    var result = this;\n    for (var i = 0; i < this.length && result === this; i++) {\n      var $element = $(this[i]), queryui = $element.data('queryui');\n      switch (operation) {\n        // initialize the element as a Query UI\n        case 'init':\n          if (!queryui) {\n            $element.data('queryui', queryui = new LdfQueryUI($element, option));\n            queryui._create();\n          }\n          break;\n        // set an option of a Query UI\n        case 'option':\n          if (!queryui) throw new Error('Query UI not activated on this element');\n          // retrieve all options\n          if (option === undefined)     result = queryui.options;\n          // retrieve a specific option\n          else if (value === undefined) result = queryui.options[value];\n          // set a specific option\n          else queryui._setOption(option, value);\n          break;\n      }\n    }\n    return result;\n  };\n\n  // Creates a new Query UI interface for the given element\n  function LdfQueryUI($element, options) {\n    this.element = $element;\n    this.options = $.extend({}, this.options, options);\n  }\n\n  $.extend(LdfQueryUI.prototype, {\n    // Default widget options\n    options: {\n      datasources: [],\n      queries: [],\n      prefixes: [],\n    },\n\n    // Initializes the widget\n    _create: function () {\n      var self = this,\n          options = this.options,\n          $element = this.element,\n          $log = this.$log = $('.log', $element),\n          $stop = this.$stop = $('.stop', $element),\n          $start = this.$start = $('.start', $element),\n          $query = this.$query = $('.queryText', $element),\n          $queries = this.$queries = $('.query', $element),\n          $results = this.$results = $('.results', $element),\n          $datasources = this.$datasources = $('.datasources', $element);\n\n      // Replace non-existing elements by an empty text box\n      if (!$datasources.length) $datasources = this.$datasources = $('<select>');\n\n      // When a datasource is selected, load the corresponding query set\n      $datasources.chosen({\n        create_option: true, persistent_create_option: true,\n        skip_no_results: true, search_contains: true, display_selected_options: false,\n        placeholder_text: ' ', create_option_text: 'Add datasource',\n      });\n      $datasources.change(function () { self._setOption('selectedDatasources', $datasources.val()); });\n\n      // When a query is selected, load it into the editor\n      $query.edited = $query.val() !== '';\n      $query.change(function () { options.query = $query.val(); $query.edited = true; });\n      $queries.chosen({ skip_no_results: true, placeholder_text: ' ' });\n      $queries.change(function (query) {\n        if (query = $queries.val())\n          $query.val(options.query = query).edited = false;\n      });\n\n      // Set up starting and stopping\n      $start.click(this._execute.bind(this));\n      $stop.click(this._stopExecution.bind(this));\n\n      // Add log lines to the log element\n      var logger = this._logger = new ldf.Logger();\n      ldf.Logger.setLevel('info');\n      logger._print = function (items) { appendText($log, items.slice(2).join(' ').trim() + '\\n'); };\n\n      // Apply all options\n      for (var key in options)\n        this._setOption(key, options[key], true);\n    },\n\n    // Sets a specific widget option\n    _setOption: function (key, value, initialize) {\n      var options = this.options;\n      if (!initialize && options[key] === value) return;\n      options[key] = value;\n\n      // Apply the chosen option\n      var self = this, $datasources = this.$datasources, $queries = this.$queries;\n      switch (key) {\n      // Set the datasources available for querying\n      case 'datasources':\n        // Create options for each datasource\n        $datasources.empty().append((value || []).map(function (datasource, index) {\n          return $('<option>', { text: datasource.name, value: datasource.url });\n        }));\n        // Restore selected datasources\n        this._setOption('selectedDatasources', options.selectedDatasources, true);\n        break;\n      // Set the datasources to query\n      case 'selectedDatasources':\n        // Choose the first available datasource if none was chosen\n        var $options = $datasources.children();\n        if (initialize && !(value && value.length) && $options.length)\n          options[key] = value = [$options.val()];\n        // Select chosen datasources that were already in the list\n        var selected = toHash(value);\n        $options.each(function (index) {\n          var $option = $(this), url = $(this).val();\n          $option.attr('selected', url in selected);\n          selected[url] = true;\n        });\n        // Add and select chosen datasources that were not in the list yet\n        $datasources.append($.map(selected, function (exists, url) {\n          return exists ? null : $('<option>', { text: url, value: url, selected: true });\n        })).trigger('chosen:updated');\n        // Update the query set\n        this._loadQueries(value);\n        break;\n      // Set the query\n      case 'query':\n        this.$query.val(value).change();\n        break;\n      // Set the list of all possible queries\n      case 'queries':\n        this._loadQueries(options.selectedDatasources);\n        break;\n      // Set the list of selectable queries\n      case 'relevantQueries':\n        value = value || [];\n        // Load the first selectable query if the current query was not edited and not in the list\n        if (!this.$query.edited && !value.some(function (v) { return v.sparql === options.query; }))\n          value[0] && this._setOption('query', value[0].sparql);\n        // Update the selectable query list\n        $queries.empty().append($('<option>'), value.map(function (query) {\n          return $('<option>', { text: query.name, value: query.sparql,\n                                 selected: options.query === query.sparql });\n        })).trigger('chosen:updated').change();\n        break;\n      // Load settings from a JSON resource\n      case 'settings':\n        $.getJSON(value, function (settings) {\n          for (var key in settings)\n            self._setOption(key, settings[key]);\n        });\n        break;\n      }\n    },\n\n    // Load queries relevant for the given datasources\n    _loadQueries: function (datasources) {\n      datasources = toHash(datasources);\n      var queries = (this.options.queries || []).filter(function (query, index) {\n        query.id = index;\n        // Include the query if it indicates no datasources,\n        // or if it is relevant for at least one datasource\n        return !query.datasources || !query.datasources.length ||\n               query.datasources.some(function (d) { return d in datasources; });\n      });\n\n      // Load the set of queries if it is different from the current set\n      var querySetId = queries.map(function (q) { return q.id; }).join();\n      if (this._querySetId !== querySetId) {\n        this._querySetId = querySetId;\n        this._setOption('relevantQueries', queries);\n        this.element.trigger('changeQuerySet');\n      }\n    },\n\n    // Starts query execution\n    _execute: function () {\n     var datasources = this.$datasources.val();\n      if (!datasources || !datasources.length)\n        return alert('Please choose a datasource to execute the query.');\n\n      // Clear results and log, and scroll page to the results\n      var $results = this.$results, $log = this.$log;\n      $('html,body').animate({ scrollTop: this.$start.offset().top });\n      this.$stop.show();\n      this.$start.hide();\n      $log.empty();\n      $results.empty();\n\n      // Create a client to fetch the fragments through HTTP\n      var config = { prefixes: this.options.prefixes, logger: this._logger };\n      config.fragmentsClient = new ldf.FragmentsClient(datasources, config);\n\n      // Create the iterator to solve the query\n      var resultsIterator;\n      try { resultsIterator = new ldf.SparqlIterator(this.$query.val(), config); }\n      catch (error) { return this._stopExecution(error); }\n      this._resultsIterator = resultsIterator;\n      resultsIterator.on('end', $.proxy(this._stopExecution, this));\n      resultsIterator.on('error', $.proxy(this._stopExecution, this));\n\n      // Read the iterator's results, and write them depending on the query type\n      switch (resultsIterator.queryType) {\n        // For SELECT queries, write a JSON array representation of the rows\n        case 'SELECT':\n          var resultCount = 0;\n          resultsIterator.on('data', function (row) {\n            resultCount++;\n            var lines = [];\n            $.each(row, function (k, v) { if (v !== undefined) lines.push(k + ': ' + v); });\n            appendText($results, lines.join('\\n'), '\\n\\n');\n          });\n          resultsIterator.on('end', function () {\n            resultCount || appendText($results, '(This query has no results.)');\n          });\n          break;\n        // For CONSTRUCT and DESCRIBE queries, write a Turtle representation of all results\n        case 'CONSTRUCT':\n        case 'DESCRIBE':\n          var writer = new N3.Writer({ write: function (chunk, encoding, done) {\n            appendText($results, chunk), done && done();\n          }}, config);\n          resultsIterator.on('data', function (triple) { writer.addTriple(triple); })\n                         .on('end',  function () { writer.end(); });\n          break;\n        // For ASK queries, write whether an answer exists\n        case 'ASK':\n          resultsIterator.on('data', function (exists) { appendText($results, exists); });\n          break;\n        default:\n          appendText($log, 'Unsupported query type: ' + resultsIterator.queryType);\n      }\n    },\n\n    // Stops query execution\n    _stopExecution: function (error) {\n      this.$stop.hide();\n      this.$start.show();\n      this._resultsIterator && this._resultsIterator.removeAllListeners();\n      ldf.HttpClient.abortAll && ldf.HttpClient.abortAll();\n      error && error.message && this.$results.text(error.message);\n    },\n  });\n\n  // Appends text to the given element\n  function appendText($element) {\n    for (var i = 1, l = arguments.length; i < l; i++)\n      $element.append((arguments[i] + '').replace(/(<)|(>)|(&)|(https?:\\/\\/[^\\s<>]+)/g, escape));\n    $element.scrollTop(1E10);\n  }\n\n  // Escapes special HTML characters and convert URLs into links\n  function escape(match, lt, gt, amp, url) {\n    return lt && '&lt;' || gt && '&gt;' || amp && '&amp;' ||\n           $('<a>', { href: url, target: '_blank', text: url })[0].outerHTML;\n  }\n\n  // Converts the array to a hash with the elements as keys\n  function toHash(array) {\n    var hash = {}, length = array ? array.length : 0;\n    for (var i = 0; i < length; i++)\n      hash[array[i]] = false;\n    return hash;\n  }\n})(jQuery);\n"]}